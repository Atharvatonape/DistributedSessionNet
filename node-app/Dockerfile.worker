# node-app/Dockerfile.worker
# Use an official Python runtime as a parent image
FROM python:3.8-slim

# Set the working directory in the container
WORKDIR /app

RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    gcc \
    libffi-dev \
    libssl-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get install net-tools -y

COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt
# Copy the current directory contents into the container at /app
COPY . /app



# Make port 8110 available to the world outside this container
EXPOSE 8110

# Define environment variable
ENV FLASK_APP=worker.py
ENV FLASK_RUN_HOST=0.0.0.0
ENV FLASK_RUN_PORT=8110

# Command to run the app
CMD ["python", "worker.py"]

# docker build -f Dockerfile.worker -t worker_image .
